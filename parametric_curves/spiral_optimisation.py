import numpy as np
import scipy
from numpy import cos, sin, ndarray


def abcds_f(
    p: (float, float, float, float, float)
) -> tuple[float, float, float, float, float]:
    a = p[0]
    b = -(11.0 * p[0] / 2.0 - 9.0 * p[1] + 9.0 * p[2] / 2.0 - p[3]) / p[4]
    c = (9.0 * p[0] - 45.0 * p[1] / 2.0 + 18.0 * p[2] - 9.0 * p[3] / 2.0) / p[4] ** 2
    d = (
        -(9.0 * p[0] / 2.0 - 27.0 * p[1] / 2.0 + 27.0 * p[2] / 2.0 - 9.0 * p[3] / 2.0)
        / p[4] ** 3
    )
    arclength = p[4]
    return a, b, c, d, arclength


def K(
    a: float, b: float, c: float, d: float, s_values: np.ndarray
) -> np.ndarray[float]:
    return d * s_values**3 + c * s_values**2 + b * s_values + a


def Psi(
    a: float,
    b: float,
    c: float,
    d: float,
    s_values: np.ndarray,
    psi_0: float,
) -> np.ndarray[float]:
    # all inputs should have the same shape or be scalars
    return (
        d * s_values**4 / 4
        + c * s_values**3 / 3
        + b * s_values**2 / 2
        + a * s_values
        + psi_0
    )


def eval_spiral(
    p: tuple[float, float, float, float, float],
    x_0: float,
    y_0: float,
    psi_0: float,
    ds: float = 0.01,
) -> tuple[ndarray, ndarray, ndarray, ndarray, ndarray]:
    a, b, c, d, s_f = abcds_f(p)  # s_f is the arc-length of the spiral

    # Calculate the number of points based on the provided step size ds
    point_count = int(np.ceil(s_f / ds))
    s_values = np.linspace(0, s_f, point_count, dtype=float)
    curvature_values = K(a, b, c, d, s_values)
    psi_values = Psi(a, b, c, d, s_values, psi_0)
    x_values = (
        scipy.integrate.cumulative_trapezoid(np.cos(psi_values), s_values, initial=0)
        + x_0
    )
    y_values = (
        scipy.integrate.cumulative_trapezoid(np.sin(psi_values), s_values, initial=0)
        + y_0
    )

    return s_values, x_values, y_values, psi_values, curvature_values


def optimize_spiral(
    x_0: float,
    y_0: float,
    psi_0: float,
    k_0: float,
    x_f: float,
    y_f: float,
    psi_f: float,
    k_f: float,
    k_max: float,
    equal=False,
) -> tuple[float, float, float, float, float]:
    alpha = 10000.0
    beta = 10000.0
    gamma = 10000.0
    p_0 = k_0
    p_3 = k_f

    arc_length_initial_guess = np.hypot(x_f - x_0, y_f - y_0)

    bounds = (
        (k_max if equal else -k_max, k_max),
        (k_max if equal else -k_max, k_max),
        (arc_length_initial_guess, 3.5 * arc_length_initial_guess),
    )

    params_to_optimize = np.array((0, 0, arc_length_initial_guess))

    result = scipy.optimize.minimize(
        cost_function,
        params_to_optimize,
        jac=jacobian,
        bounds=bounds,
        args=(p_0, p_3, alpha, beta, gamma, x_0, y_0, psi_0, x_f, y_f, psi_f),
        method="L-BFGS-B",
        options={"disp": False},
    )

    return p_0, result.x[0], result.x[1], p_3, result.x[2]


def cost_function(
    params_to_optimize,
    p_0,
    p_3,
    alpha,
    beta,
    gamma,
    x_0,
    y_0,
    psi_0,
    x_f,
    y_f,
    psi_f,
):
    p = (p_0, params_to_optimize[0], params_to_optimize[1], p_3, params_to_optimize[2])
    return compute_cost_function(
        p, alpha, beta, gamma, x_0, y_0, psi_0, x_f, y_f, psi_f
    )


def jacobian(
    params_to_optimize,
    p_0,
    p_3,
    alpha,
    beta,
    gamma,
    x_0,
    y_0,
    psi_0,
    x_f,
    y_f,
    psi_f,
):
    p = (p_0, params_to_optimize[0], params_to_optimize[1], p_3, params_to_optimize[2])
    return compute_cf_gradient(p, alpha, beta, gamma, x_0, y_0, psi_0, x_f, y_f, psi_f)


def compute_cost_function(
    p: (float, float, float, float, float),
    alpha,
    beta,
    gamma,
    x_0,
    y_0,
    psi_0,
    x_f,
    y_f,
    psi_f,
):
    return Bending_Energy(p) + Soft_Constraints(
        p, alpha, beta, gamma, x_0, y_0, psi_0, x_f, y_f, psi_f
    )


def compute_cf_gradient(
    p: (float, float, float, float, float),
    alpha,
    beta,
    gamma,
    x_0,
    y_0,
    psi_0,
    x_f,
    y_f,
    psi_f,
) -> np.ndarray:
    dCdp_1 = (
        alpha
        * p[4]
        * (
            p[4]
            * (
                cos(psi_0)
                + 4
                * cos(
                    0.125 * p[0] * p[4]
                    + 0.0078125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 6.103515625e-5
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.000651041666666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * cos(
                    0.25 * p[0] * p[4]
                    + 0.03125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.0009765625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.00520833333333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * cos(
                    0.375 * p[0] * p[4]
                    + 0.0703125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.00494384765625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.017578125
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * cos(
                    0.5 * p[0] * p[4]
                    + 0.125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.0416666666666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * cos(
                    0.625 * p[0] * p[4]
                    + 0.1953125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.03814697265625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.0813802083333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * cos(
                    0.75 * p[0] * p[4]
                    + 0.28125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.0791015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.140625
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * cos(
                    0.875 * p[0] * p[4]
                    + 0.3828125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.14654541015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.223307291666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + cos(
                    1.0 * p[0] * p[4]
                    + 0.5 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.25
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.333333333333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
            )
            / 24
            + x_0
            - x_f
        )
        * (
            -0.2259521484375
            * p[4]
            * sin(
                0.125 * p[0] * p[4]
                + 0.0078125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 6.103515625e-5
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.000651041666666667
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            - 0.3544921875
            * p[4]
            * sin(
                0.25 * p[0] * p[4]
                + 0.03125 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.0009765625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.00520833333333333
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            - 1.2161865234375
            * p[4]
            * sin(
                0.375 * p[0] * p[4]
                + 0.0703125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.00494384765625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.017578125
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            - 0.796875
            * p[4]
            * sin(
                0.5 * p[0] * p[4]
                + 0.125 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.015625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.0416666666666667
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            - 1.7669677734375
            * p[4]
            * sin(
                0.625 * p[0] * p[4]
                + 0.1953125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.03814697265625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.0813802083333333
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            - 0.8701171875
            * p[4]
            * sin(
                0.75 * p[0] * p[4]
                + 0.28125 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.0791015625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.140625
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            - 1.5970458984375
            * p[4]
            * sin(
                0.875 * p[0] * p[4]
                + 0.3828125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.14654541015625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.223307291666667
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            - 0.375
            * p[4]
            * sin(
                1.0 * p[0] * p[4]
                + 0.5 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.25 * p[4] * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.333333333333333
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
        )
        / 12
        + beta
        * p[4]
        * (
            p[4]
            * (
                sin(psi_0)
                + 4
                * sin(
                    0.125 * p[0] * p[4]
                    + 0.0078125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 6.103515625e-5
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.000651041666666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * sin(
                    0.25 * p[0] * p[4]
                    + 0.03125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.0009765625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.00520833333333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * sin(
                    0.375 * p[0] * p[4]
                    + 0.0703125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.00494384765625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.017578125
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * sin(
                    0.5 * p[0] * p[4]
                    + 0.125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.0416666666666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * sin(
                    0.625 * p[0] * p[4]
                    + 0.1953125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.03814697265625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.0813802083333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * sin(
                    0.75 * p[0] * p[4]
                    + 0.28125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.0791015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.140625
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * sin(
                    0.875 * p[0] * p[4]
                    + 0.3828125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.14654541015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.223307291666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + sin(
                    1.0 * p[0] * p[4]
                    + 0.5 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.25
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.333333333333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
            )
            / 24
            + y_0
            - y_f
        )
        * (
            0.2259521484375
            * p[4]
            * cos(
                0.125 * p[0] * p[4]
                + 0.0078125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 6.103515625e-5
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.000651041666666667
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            + 0.3544921875
            * p[4]
            * cos(
                0.25 * p[0] * p[4]
                + 0.03125 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.0009765625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.00520833333333333
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            + 1.2161865234375
            * p[4]
            * cos(
                0.375 * p[0] * p[4]
                + 0.0703125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.00494384765625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.017578125
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            + 0.796875
            * p[4]
            * cos(
                0.5 * p[0] * p[4]
                + 0.125 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.015625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.0416666666666667
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            + 1.7669677734375
            * p[4]
            * cos(
                0.625 * p[0] * p[4]
                + 0.1953125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.03814697265625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.0813802083333333
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            + 0.8701171875
            * p[4]
            * cos(
                0.75 * p[0] * p[4]
                + 0.28125 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.0791015625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.140625
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            + 1.5970458984375
            * p[4]
            * cos(
                0.875 * p[0] * p[4]
                + 0.3828125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.14654541015625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.223307291666667
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            + 0.375
            * p[4]
            * cos(
                1.0 * p[0] * p[4]
                + 0.5 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.25 * p[4] * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.333333333333333
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
        )
        / 12
        + 0.75
        * gamma
        * p[4]
        * (
            1.0 * p[0] * p[4]
            + 0.5 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
            + 0.25 * p[4] * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
            + 0.333333333333333
            * p[4]
            * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
            + psi_0
            - psi_f
        )
        + 9.0 * p[0] * p[4]
        + 0.2 * p[4] * (-634.5 * p[0] + 1498.5 * p[1] - 1174.5 * p[2] + 310.5 * p[3])
        + 0.333333333333333
        * p[4]
        * (-144.0 * p[0] + 162.0 * p[1] - 81.0 * p[2] + 18.0 * p[3])
        + 0.142857142857143
        * p[4]
        * (-121.5 * p[0] + 364.5 * p[1] - 364.5 * p[2] + 121.5 * p[3])
        + 0.25 * p[4] * (436.5 * p[0] - 810.0 * p[1] + 526.5 * p[2] - 126.0 * p[3])
        + 0.166666666666667
        * p[4]
        * (445.5 * p[0] - 1215.0 * p[1] + 1093.5 * p[2] - 324.0 * p[3])
    )

    dCdp_2 = (
        alpha
        * p[4]
        * (
            p[4]
            * (
                cos(psi_0)
                + 4
                * cos(
                    0.125 * p[0] * p[4]
                    + 0.0078125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 6.103515625e-5
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.000651041666666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * cos(
                    0.25 * p[0] * p[4]
                    + 0.03125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.0009765625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.00520833333333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * cos(
                    0.375 * p[0] * p[4]
                    + 0.0703125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.00494384765625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.017578125
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * cos(
                    0.5 * p[0] * p[4]
                    + 0.125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.0416666666666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * cos(
                    0.625 * p[0] * p[4]
                    + 0.1953125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.03814697265625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.0813802083333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * cos(
                    0.75 * p[0] * p[4]
                    + 0.28125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.0791015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.140625
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * cos(
                    0.875 * p[0] * p[4]
                    + 0.3828125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.14654541015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.223307291666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + cos(
                    1.0 * p[0] * p[4]
                    + 0.5 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.25
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.333333333333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
            )
            / 24
            + x_0
            - x_f
        )
        * (
            0.0970458984375
            * p[4]
            * sin(
                0.125 * p[0] * p[4]
                + 0.0078125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 6.103515625e-5
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.000651041666666667
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            + 0.1201171875
            * p[4]
            * sin(
                0.25 * p[0] * p[4]
                + 0.03125 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.0009765625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.00520833333333333
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            + 0.2669677734375
            * p[4]
            * sin(
                0.375 * p[0] * p[4]
                + 0.0703125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.00494384765625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.017578125
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            + 0.046875
            * p[4]
            * sin(
                0.5 * p[0] * p[4]
                + 0.125 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.015625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.0416666666666667
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            - 0.2838134765625
            * p[4]
            * sin(
                0.625 * p[0] * p[4]
                + 0.1953125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.03814697265625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.0813802083333333
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            - 0.3955078125
            * p[4]
            * sin(
                0.75 * p[0] * p[4]
                + 0.28125 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.0791015625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.140625
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            - 1.2740478515625
            * p[4]
            * sin(
                0.875 * p[0] * p[4]
                + 0.3828125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.14654541015625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.223307291666667
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            - 0.375
            * p[4]
            * sin(
                1.0 * p[0] * p[4]
                + 0.5 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.25 * p[4] * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.333333333333333
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
        )
        / 12
        + beta
        * p[4]
        * (
            p[4]
            * (
                sin(psi_0)
                + 4
                * sin(
                    0.125 * p[0] * p[4]
                    + 0.0078125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 6.103515625e-5
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.000651041666666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * sin(
                    0.25 * p[0] * p[4]
                    + 0.03125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.0009765625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.00520833333333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * sin(
                    0.375 * p[0] * p[4]
                    + 0.0703125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.00494384765625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.017578125
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * sin(
                    0.5 * p[0] * p[4]
                    + 0.125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.0416666666666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * sin(
                    0.625 * p[0] * p[4]
                    + 0.1953125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.03814697265625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.0813802083333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * sin(
                    0.75 * p[0] * p[4]
                    + 0.28125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.0791015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.140625
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * sin(
                    0.875 * p[0] * p[4]
                    + 0.3828125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.14654541015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.223307291666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + sin(
                    1.0 * p[0] * p[4]
                    + 0.5 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.25
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.333333333333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
            )
            / 24
            + y_0
            - y_f
        )
        * (
            -0.0970458984375
            * p[4]
            * cos(
                0.125 * p[0] * p[4]
                + 0.0078125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 6.103515625e-5
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.000651041666666667
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            - 0.1201171875
            * p[4]
            * cos(
                0.25 * p[0] * p[4]
                + 0.03125 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.0009765625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.00520833333333333
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            - 0.2669677734375
            * p[4]
            * cos(
                0.375 * p[0] * p[4]
                + 0.0703125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.00494384765625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.017578125
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            - 0.046875
            * p[4]
            * cos(
                0.5 * p[0] * p[4]
                + 0.125 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.015625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.0416666666666667
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            + 0.2838134765625
            * p[4]
            * cos(
                0.625 * p[0] * p[4]
                + 0.1953125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.03814697265625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.0813802083333333
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            + 0.3955078125
            * p[4]
            * cos(
                0.75 * p[0] * p[4]
                + 0.28125 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.0791015625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.140625
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            + 1.2740478515625
            * p[4]
            * cos(
                0.875 * p[0] * p[4]
                + 0.3828125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.14654541015625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.223307291666667
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            + 0.375
            * p[4]
            * cos(
                1.0 * p[0] * p[4]
                + 0.5 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.25 * p[4] * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.333333333333333
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
        )
        / 12
        + 0.75
        * gamma
        * p[4]
        * (
            1.0 * p[0] * p[4]
            + 0.5 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
            + 0.25 * p[4] * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
            + 0.333333333333333
            * p[4]
            * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
            + psi_0
            - psi_f
        )
        - 4.5 * p[0] * p[4]
        + 0.166666666666667
        * p[4]
        * (-405.0 * p[0] + 1093.5 * p[1] - 972.0 * p[2] + 283.5 * p[3])
        + 0.25 * p[4] * (-306.0 * p[0] + 526.5 * p[1] - 324.0 * p[2] + 76.5 * p[3])
        + 0.333333333333333
        * p[4]
        * (85.5 * p[0] - 81.0 * p[1] + 40.5 * p[2] - 9.0 * p[3])
        + 0.142857142857143
        * p[4]
        * (121.5 * p[0] - 364.5 * p[1] + 364.5 * p[2] - 121.5 * p[3])
        + 0.2 * p[4] * (513.0 * p[0] - 1174.5 * p[1] + 891.0 * p[2] - 229.5 * p[3])
    )

    dCdp_4 = (
        alpha
        * (
            p[4]
            * (
                cos(psi_0)
                + 4
                * cos(
                    0.125 * p[0] * p[4]
                    + 0.0078125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 6.103515625e-5
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.000651041666666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * cos(
                    0.25 * p[0] * p[4]
                    + 0.03125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.0009765625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.00520833333333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * cos(
                    0.375 * p[0] * p[4]
                    + 0.0703125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.00494384765625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.017578125
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * cos(
                    0.5 * p[0] * p[4]
                    + 0.125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.0416666666666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * cos(
                    0.625 * p[0] * p[4]
                    + 0.1953125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.03814697265625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.0813802083333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * cos(
                    0.75 * p[0] * p[4]
                    + 0.28125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.0791015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.140625
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * cos(
                    0.875 * p[0] * p[4]
                    + 0.3828125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.14654541015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.223307291666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + cos(
                    1.0 * p[0] * p[4]
                    + 0.5 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.25
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.333333333333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
            )
            / 24
            + x_0
            - x_f
        )
        * (
            p[4]
            * (
                -4
                * (
                    0.087615966796875 * p[0]
                    + 0.056488037109375 * p[1]
                    - 0.024261474609375 * p[2]
                    + 0.005157470703125 * p[3]
                )
                * sin(
                    0.125 * p[0] * p[4]
                    + 0.0078125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 6.103515625e-5
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.000651041666666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                - 4
                * (
                    0.111541748046875 * p[0]
                    + 0.441741943359375 * p[1]
                    + 0.070953369140625 * p[2]
                    + 0.000762939453125 * p[3]
                )
                * sin(
                    0.625 * p[0] * p[4]
                    + 0.1953125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.03814697265625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.0813802083333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                - 2
                * (
                    0.11279296875 * p[0]
                    + 0.43505859375 * p[1]
                    + 0.19775390625 * p[2]
                    + 0.00439453125 * p[3]
                )
                * sin(
                    0.75 * p[0] * p[4]
                    + 0.28125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.0791015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.140625
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                - 2
                * (
                    0.1171875 * p[0]
                    + 0.3984375 * p[1]
                    - 0.0234375 * p[2]
                    + 0.0078125 * p[3]
                )
                * sin(
                    0.5 * p[0] * p[4]
                    + 0.125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.0416666666666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                - 4
                * (
                    0.119842529296875 * p[0]
                    + 0.399261474609375 * p[1]
                    + 0.318511962890625 * p[2]
                    + 0.037384033203125 * p[3]
                )
                * sin(
                    0.875 * p[0] * p[4]
                    + 0.3828125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.14654541015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.223307291666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                - 2
                * (
                    0.12060546875 * p[0]
                    + 0.17724609375 * p[1]
                    - 0.06005859375 * p[2]
                    + 0.01220703125 * p[3]
                )
                * sin(
                    0.25 * p[0] * p[4]
                    + 0.03125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.0009765625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.00520833333333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                - 4
                * (
                    0.124237060546875 * p[0]
                    + 0.304046630859375 * p[1]
                    - 0.066741943359375 * p[2]
                    + 0.013458251953125 * p[3]
                )
                * sin(
                    0.375 * p[0] * p[4]
                    + 0.0703125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.00494384765625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.017578125
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                - (0.125 * p[0] + 0.375 * p[1] + 0.375 * p[2] + 0.125 * p[3])
                * sin(
                    1.0 * p[0] * p[4]
                    + 0.5 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.25
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.333333333333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
            )
            / 12
            + cos(psi_0) / 12
            + cos(
                0.125 * p[0] * p[4]
                + 0.0078125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 6.103515625e-5
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.000651041666666667
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            / 3
            + cos(
                0.25 * p[0] * p[4]
                + 0.03125 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.0009765625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.00520833333333333
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            / 6
            + cos(
                0.375 * p[0] * p[4]
                + 0.0703125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.00494384765625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.017578125
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            / 3
            + cos(
                0.5 * p[0] * p[4]
                + 0.125 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.015625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.0416666666666667
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            / 6
            + cos(
                0.625 * p[0] * p[4]
                + 0.1953125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.03814697265625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.0813802083333333
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            / 3
            + cos(
                0.75 * p[0] * p[4]
                + 0.28125 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.0791015625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.140625
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            / 6
            + cos(
                0.875 * p[0] * p[4]
                + 0.3828125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.14654541015625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.223307291666667
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            / 3
            + cos(
                1.0 * p[0] * p[4]
                + 0.5 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.25 * p[4] * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.333333333333333
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            / 12
        )
        + beta
        * (
            p[4]
            * (
                sin(psi_0)
                + 4
                * sin(
                    0.125 * p[0] * p[4]
                    + 0.0078125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 6.103515625e-5
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.000651041666666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * sin(
                    0.25 * p[0] * p[4]
                    + 0.03125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.0009765625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.00520833333333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * sin(
                    0.375 * p[0] * p[4]
                    + 0.0703125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.00494384765625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.017578125
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * sin(
                    0.5 * p[0] * p[4]
                    + 0.125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.0416666666666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * sin(
                    0.625 * p[0] * p[4]
                    + 0.1953125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.03814697265625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.0813802083333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * sin(
                    0.75 * p[0] * p[4]
                    + 0.28125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.0791015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.140625
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * sin(
                    0.875 * p[0] * p[4]
                    + 0.3828125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.14654541015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.223307291666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + sin(
                    1.0 * p[0] * p[4]
                    + 0.5 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.25
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.333333333333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
            )
            / 24
            + y_0
            - y_f
        )
        * (
            p[4]
            * (
                4
                * (
                    0.087615966796875 * p[0]
                    + 0.056488037109375 * p[1]
                    - 0.024261474609375 * p[2]
                    + 0.005157470703125 * p[3]
                )
                * cos(
                    0.125 * p[0] * p[4]
                    + 0.0078125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 6.103515625e-5
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.000651041666666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * (
                    0.111541748046875 * p[0]
                    + 0.441741943359375 * p[1]
                    + 0.070953369140625 * p[2]
                    + 0.000762939453125 * p[3]
                )
                * cos(
                    0.625 * p[0] * p[4]
                    + 0.1953125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.03814697265625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.0813802083333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * (
                    0.11279296875 * p[0]
                    + 0.43505859375 * p[1]
                    + 0.19775390625 * p[2]
                    + 0.00439453125 * p[3]
                )
                * cos(
                    0.75 * p[0] * p[4]
                    + 0.28125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.0791015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.140625
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * (
                    0.1171875 * p[0]
                    + 0.3984375 * p[1]
                    - 0.0234375 * p[2]
                    + 0.0078125 * p[3]
                )
                * cos(
                    0.5 * p[0] * p[4]
                    + 0.125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.0416666666666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * (
                    0.119842529296875 * p[0]
                    + 0.399261474609375 * p[1]
                    + 0.318511962890625 * p[2]
                    + 0.037384033203125 * p[3]
                )
                * cos(
                    0.875 * p[0] * p[4]
                    + 0.3828125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.14654541015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.223307291666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * (
                    0.12060546875 * p[0]
                    + 0.17724609375 * p[1]
                    - 0.06005859375 * p[2]
                    + 0.01220703125 * p[3]
                )
                * cos(
                    0.25 * p[0] * p[4]
                    + 0.03125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.0009765625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.00520833333333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * (
                    0.124237060546875 * p[0]
                    + 0.304046630859375 * p[1]
                    - 0.066741943359375 * p[2]
                    + 0.013458251953125 * p[3]
                )
                * cos(
                    0.375 * p[0] * p[4]
                    + 0.0703125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.00494384765625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.017578125
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + (0.125 * p[0] + 0.375 * p[1] + 0.375 * p[2] + 0.125 * p[3])
                * cos(
                    1.0 * p[0] * p[4]
                    + 0.5 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.25
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.333333333333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
            )
            / 12
            + sin(psi_0) / 12
            + sin(
                0.125 * p[0] * p[4]
                + 0.0078125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 6.103515625e-5
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.000651041666666667
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            / 3
            + sin(
                0.25 * p[0] * p[4]
                + 0.03125 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.0009765625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.00520833333333333
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            / 6
            + sin(
                0.375 * p[0] * p[4]
                + 0.0703125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.00494384765625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.017578125
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            / 3
            + sin(
                0.5 * p[0] * p[4]
                + 0.125 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.015625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.0416666666666667
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            / 6
            + sin(
                0.625 * p[0] * p[4]
                + 0.1953125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.03814697265625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.0813802083333333
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            / 3
            + sin(
                0.75 * p[0] * p[4]
                + 0.28125 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.0791015625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.140625
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            / 6
            + sin(
                0.875 * p[0] * p[4]
                + 0.3828125
                * p[4]
                * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.14654541015625
                * p[4]
                * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.223307291666667
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            / 3
            + sin(
                1.0 * p[0] * p[4]
                + 0.5 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                + 0.25 * p[4] * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                + 0.333333333333333
                * p[4]
                * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                + psi_0
            )
            / 12
        )
        + gamma
        * (0.25 * p[0] + 0.75 * p[1] + 0.75 * p[2] + 0.25 * p[3])
        * (
            1.0 * p[0] * p[4]
            + 0.5 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
            + 0.25 * p[4] * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
            + 0.333333333333333
            * p[4]
            * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
            + psi_0
            - psi_f
        )
        + 0.0761904761904759 * p[0] ** 2
        + 0.117857142857133 * p[0] * p[1]
        - 0.0428571428571303 * p[0] * p[2]
        + 0.0226190476190471 * p[0] * p[3]
        + 0.385714285714272 * p[1] ** 2
        - 0.0964285714285893 * p[1] * p[2]
        - 0.0428571428571445 * p[1] * p[3]
        + 0.3857142857143 * p[2] ** 2
        + 0.117857142857133 * p[2] * p[3]
        + 0.0761904761904771 * p[3] ** 2
    )

    return np.array((dCdp_1, dCdp_2, dCdp_4))


def X(
    p: (float, float, float, float, float),
    s_values: np.ndarray,
    psi_0: float,
    x_0: float,
) -> np.ndarray:
    s = s_values
    p_0, p_1, p_2, p_3, p_4 = p
    return (
        s
        * (
            np.cos(psi_0)
            + 4
            * np.cos(
                0.125 * p_0 * s
                + psi_0
                + 0.0078125
                * s**2
                * (-5.5 * p_0 + 9.0 * p_1 - 4.5 * p_2 + 1.0 * p_3)
                / p_4
                + 0.000651041666666667
                * s**3
                * (9.0 * p_0 - 22.5 * p_1 + 18.0 * p_2 - 4.5 * p_3)
                / p_4**2
                + 6.103515625e-5
                * s**4
                * (-4.5 * p_0 + 13.5 * p_1 - 13.5 * p_2 + 4.5 * p_3)
                / p_4**3
            )
            + 2
            * np.cos(
                0.25 * p_0 * s
                + psi_0
                + 0.03125
                * s**2
                * (-5.5 * p_0 + 9.0 * p_1 - 4.5 * p_2 + 1.0 * p_3)
                / p_4
                + 0.00520833333333333
                * s**3
                * (9.0 * p_0 - 22.5 * p_1 + 18.0 * p_2 - 4.5 * p_3)
                / p_4**2
                + 0.0009765625
                * s**4
                * (-4.5 * p_0 + 13.5 * p_1 - 13.5 * p_2 + 4.5 * p_3)
                / p_4**3
            )
            + 4
            * np.cos(
                0.375 * p_0 * s
                + psi_0
                + 0.0703125
                * s**2
                * (-5.5 * p_0 + 9.0 * p_1 - 4.5 * p_2 + 1.0 * p_3)
                / p_4
                + 0.017578125
                * s**3
                * (9.0 * p_0 - 22.5 * p_1 + 18.0 * p_2 - 4.5 * p_3)
                / p_4**2
                + 0.00494384765625
                * s**4
                * (-4.5 * p_0 + 13.5 * p_1 - 13.5 * p_2 + 4.5 * p_3)
                / p_4**3
            )
            + 2
            * np.cos(
                0.5 * p_0 * s
                + psi_0
                + 0.125 * s**2 * (-5.5 * p_0 + 9.0 * p_1 - 4.5 * p_2 + 1.0 * p_3) / p_4
                + 0.0416666666666667
                * s**3
                * (9.0 * p_0 - 22.5 * p_1 + 18.0 * p_2 - 4.5 * p_3)
                / p_4**2
                + 0.015625
                * s**4
                * (-4.5 * p_0 + 13.5 * p_1 - 13.5 * p_2 + 4.5 * p_3)
                / p_4**3
            )
            + 4
            * np.cos(
                0.625 * p_0 * s
                + psi_0
                + 0.1953125
                * s**2
                * (-5.5 * p_0 + 9.0 * p_1 - 4.5 * p_2 + 1.0 * p_3)
                / p_4
                + 0.0813802083333333
                * s**3
                * (9.0 * p_0 - 22.5 * p_1 + 18.0 * p_2 - 4.5 * p_3)
                / p_4**2
                + 0.03814697265625
                * s**4
                * (-4.5 * p_0 + 13.5 * p_1 - 13.5 * p_2 + 4.5 * p_3)
                / p_4**3
            )
            + 2
            * np.cos(
                0.75 * p_0 * s
                + psi_0
                + 0.28125
                * s**2
                * (-5.5 * p_0 + 9.0 * p_1 - 4.5 * p_2 + 1.0 * p_3)
                / p_4
                + 0.140625
                * s**3
                * (9.0 * p_0 - 22.5 * p_1 + 18.0 * p_2 - 4.5 * p_3)
                / p_4**2
                + 0.0791015625
                * s**4
                * (-4.5 * p_0 + 13.5 * p_1 - 13.5 * p_2 + 4.5 * p_3)
                / p_4**3
            )
            + 4
            * np.cos(
                0.875 * p_0 * s
                + psi_0
                + 0.3828125
                * s**2
                * (-5.5 * p_0 + 9.0 * p_1 - 4.5 * p_2 + 1.0 * p_3)
                / p_4
                + 0.223307291666667
                * s**3
                * (9.0 * p_0 - 22.5 * p_1 + 18.0 * p_2 - 4.5 * p_3)
                / p_4**2
                + 0.14654541015625
                * s**4
                * (-4.5 * p_0 + 13.5 * p_1 - 13.5 * p_2 + 4.5 * p_3)
                / p_4**3
            )
            + np.cos(
                1.0 * p_0 * s
                + psi_0
                + 0.5 * s**2 * (-5.5 * p_0 + 9.0 * p_1 - 4.5 * p_2 + 1.0 * p_3) / p_4
                + 0.333333333333333
                * s**3
                * (9.0 * p_0 - 22.5 * p_1 + 18.0 * p_2 - 4.5 * p_3)
                / p_4**2
                + 0.25
                * s**4
                * (-4.5 * p_0 + 13.5 * p_1 - 13.5 * p_2 + 4.5 * p_3)
                / p_4**3
            )
        )
        / 24
        + x_0
    )


def Y(
    p: (float, float, float, float, float),
    s_values: np.ndarray,
    psi_0: float,
    y_0: float,
) -> np.ndarray:
    s = s_values
    p_0, p_1, p_2, p_3, p_4 = p

    return (
        s
        * (
            np.sin(psi_0)
            + 4
            * np.sin(
                0.125 * p_0 * s
                + psi_0
                + 0.0078125
                * s**2
                * (-5.5 * p_0 + 9.0 * p_1 - 4.5 * p_2 + 1.0 * p_3)
                / p_4
                + 0.000651041666666667
                * s**3
                * (9.0 * p_0 - 22.5 * p_1 + 18.0 * p_2 - 4.5 * p_3)
                / p_4**2
                + 6.103515625e-5
                * s**4
                * (-4.5 * p_0 + 13.5 * p_1 - 13.5 * p_2 + 4.5 * p_3)
                / p_4**3
            )
            + 2
            * np.sin(
                0.25 * p_0 * s
                + psi_0
                + 0.03125
                * s**2
                * (-5.5 * p_0 + 9.0 * p_1 - 4.5 * p_2 + 1.0 * p_3)
                / p_4
                + 0.00520833333333333
                * s**3
                * (9.0 * p_0 - 22.5 * p_1 + 18.0 * p_2 - 4.5 * p_3)
                / p_4**2
                + 0.0009765625
                * s**4
                * (-4.5 * p_0 + 13.5 * p_1 - 13.5 * p_2 + 4.5 * p_3)
                / p_4**3
            )
            + 4
            * np.sin(
                0.375 * p_0 * s
                + psi_0
                + 0.0703125
                * s**2
                * (-5.5 * p_0 + 9.0 * p_1 - 4.5 * p_2 + 1.0 * p_3)
                / p_4
                + 0.017578125
                * s**3
                * (9.0 * p_0 - 22.5 * p_1 + 18.0 * p_2 - 4.5 * p_3)
                / p_4**2
                + 0.00494384765625
                * s**4
                * (-4.5 * p_0 + 13.5 * p_1 - 13.5 * p_2 + 4.5 * p_3)
                / p_4**3
            )
            + 2
            * np.sin(
                0.5 * p_0 * s
                + psi_0
                + 0.125 * s**2 * (-5.5 * p_0 + 9.0 * p_1 - 4.5 * p_2 + 1.0 * p_3) / p_4
                + 0.0416666666666667
                * s**3
                * (9.0 * p_0 - 22.5 * p_1 + 18.0 * p_2 - 4.5 * p_3)
                / p_4**2
                + 0.015625
                * s**4
                * (-4.5 * p_0 + 13.5 * p_1 - 13.5 * p_2 + 4.5 * p_3)
                / p_4**3
            )
            + 4
            * np.sin(
                0.625 * p_0 * s
                + psi_0
                + 0.1953125
                * s**2
                * (-5.5 * p_0 + 9.0 * p_1 - 4.5 * p_2 + 1.0 * p_3)
                / p_4
                + 0.0813802083333333
                * s**3
                * (9.0 * p_0 - 22.5 * p_1 + 18.0 * p_2 - 4.5 * p_3)
                / p_4**2
                + 0.03814697265625
                * s**4
                * (-4.5 * p_0 + 13.5 * p_1 - 13.5 * p_2 + 4.5 * p_3)
                / p_4**3
            )
            + 2
            * np.sin(
                0.75 * p_0 * s
                + psi_0
                + 0.28125
                * s**2
                * (-5.5 * p_0 + 9.0 * p_1 - 4.5 * p_2 + 1.0 * p_3)
                / p_4
                + 0.140625
                * s**3
                * (9.0 * p_0 - 22.5 * p_1 + 18.0 * p_2 - 4.5 * p_3)
                / p_4**2
                + 0.0791015625
                * s**4
                * (-4.5 * p_0 + 13.5 * p_1 - 13.5 * p_2 + 4.5 * p_3)
                / p_4**3
            )
            + 4
            * np.sin(
                0.875 * p_0 * s
                + psi_0
                + 0.3828125
                * s**2
                * (-5.5 * p_0 + 9.0 * p_1 - 4.5 * p_2 + 1.0 * p_3)
                / p_4
                + 0.223307291666667
                * s**3
                * (9.0 * p_0 - 22.5 * p_1 + 18.0 * p_2 - 4.5 * p_3)
                / p_4**2
                + 0.14654541015625
                * s**4
                * (-4.5 * p_0 + 13.5 * p_1 - 13.5 * p_2 + 4.5 * p_3)
                / p_4**3
            )
            + np.sin(
                1.0 * p_0 * s
                + psi_0
                + 0.5 * s**2 * (-5.5 * p_0 + 9.0 * p_1 - 4.5 * p_2 + 1.0 * p_3) / p_4
                + 0.333333333333333
                * s**3
                * (9.0 * p_0 - 22.5 * p_1 + 18.0 * p_2 - 4.5 * p_3)
                / p_4**2
                + 0.25
                * s**4
                * (-4.5 * p_0 + 13.5 * p_1 - 13.5 * p_2 + 4.5 * p_3)
                / p_4**3
            )
        )
        / 24
        + y_0
    )


def Bending_Energy(p: (float, float, float, float, float)) -> float:
    p_0, p_1, p_2, p_3, p_4 = p
    return (
        1.0 * p_0**2 * p_4
        + 0.5
        * p_4
        * (-11.0 * p_0**2 + 18.0 * p_0 * p_1 - 9.0 * p_0 * p_2 + 2.0 * p_0 * p_3)
        + 0.25
        * p_4
        * (
            -108.0 * p_0**2
            + 436.5 * p_0 * p_1
            - 306.0 * p_0 * p_2
            + 76.5 * p_0 * p_3
            - 405.0 * p_1**2
            + 526.5 * p_1 * p_2
            - 126.0 * p_1 * p_3
            - 162.0 * p_2**2
            + 76.5 * p_2 * p_3
            - 9.0 * p_3**2
        )
        + 0.166666666666667
        * p_4
        * (
            -81.0 * p_0**2
            + 445.5 * p_0 * p_1
            - 405.0 * p_0 * p_2
            + 121.5 * p_0 * p_3
            - 607.5 * p_1**2
            + 1093.5 * p_1 * p_2
            - 324.0 * p_1 * p_3
            - 486.0 * p_2**2
            + 283.5 * p_2 * p_3
            - 40.5 * p_3**2
        )
        + 0.142857142857143
        * p_4
        * (
            20.25 * p_0**2
            - 121.5 * p_0 * p_1
            + 121.5 * p_0 * p_2
            - 40.5 * p_0 * p_3
            + 182.25 * p_1**2
            - 364.5 * p_1 * p_2
            + 121.5 * p_1 * p_3
            + 182.25 * p_2**2
            - 121.5 * p_2 * p_3
            + 20.25 * p_3**2
        )
        + 0.333333333333333
        * p_4
        * (
            48.25 * p_0**2
            - 144.0 * p_0 * p_1
            + 85.5 * p_0 * p_2
            - 20.0 * p_0 * p_3
            + 81.0 * p_1**2
            - 81.0 * p_1 * p_2
            + 18.0 * p_1 * p_3
            + 20.25 * p_2**2
            - 9.0 * p_2 * p_3
            + 1.0 * p_3**2
        )
        + 0.2
        * p_4
        * (
            130.5 * p_0**2
            - 634.5 * p_0 * p_1
            + 513.0 * p_0 * p_2
            - 139.5 * p_0 * p_3
            + 749.25 * p_1**2
            - 1174.5 * p_1 * p_2
            + 310.5 * p_1 * p_3
            + 445.5 * p_2**2
            - 229.5 * p_2 * p_3
            + 29.25 * p_3**2
        )
    )


def Soft_Constraints(
    p: (float, float, float, float, float),
    alpha: float,
    beta: float,
    gamma: float,
    x_0: float,
    y_0: float,
    psi_0: float,
    x_f: float,
    y_f: float,
    psi_f: float,
) -> float:
    return (
        alpha
        * (
            p[4]
            * (
                np.cos(psi_0)
                + 4
                * np.cos(
                    0.125 * p[0] * p[4]
                    + 0.0078125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 6.103515625e-5
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.000651041666666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * np.cos(
                    0.25 * p[0] * p[4]
                    + 0.03125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.0009765625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.00520833333333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * np.cos(
                    0.375 * p[0] * p[4]
                    + 0.0703125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.00494384765625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.017578125
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * np.cos(
                    0.5 * p[0] * p[4]
                    + 0.125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.0416666666666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * np.cos(
                    0.625 * p[0] * p[4]
                    + 0.1953125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.03814697265625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.0813802083333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * np.cos(
                    0.75 * p[0] * p[4]
                    + 0.28125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.0791015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.140625
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * np.cos(
                    0.875 * p[0] * p[4]
                    + 0.3828125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.14654541015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.223307291666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + np.cos(
                    1.0 * p[0] * p[4]
                    + 0.5 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.25
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.333333333333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
            )
            / 24
            + x_0
            - x_f
        )
        ** 2
        + beta
        * (
            p[4]
            * (
                np.sin(psi_0)
                + 4
                * np.sin(
                    0.125 * p[0] * p[4]
                    + 0.0078125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 6.103515625e-5
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.000651041666666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * np.sin(
                    0.25 * p[0] * p[4]
                    + 0.03125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.0009765625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.00520833333333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * np.sin(
                    0.375 * p[0] * p[4]
                    + 0.0703125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.00494384765625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.017578125
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * np.sin(
                    0.5 * p[0] * p[4]
                    + 0.125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.0416666666666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * np.sin(
                    0.625 * p[0] * p[4]
                    + 0.1953125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.03814697265625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.0813802083333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 2
                * np.sin(
                    0.75 * p[0] * p[4]
                    + 0.28125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.0791015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.140625
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + 4
                * np.sin(
                    0.875 * p[0] * p[4]
                    + 0.3828125
                    * p[4]
                    * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.14654541015625
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.223307291666667
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
                + np.sin(
                    1.0 * p[0] * p[4]
                    + 0.5 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
                    + 0.25
                    * p[4]
                    * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
                    + 0.333333333333333
                    * p[4]
                    * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
                    + psi_0
                )
            )
            / 24
            + y_0
            - y_f
        )
        ** 2
        + gamma
        * (
            1.0 * p[0] * p[4]
            + 0.5 * p[4] * (-5.5 * p[0] + 9.0 * p[1] - 4.5 * p[2] + 1.0 * p[3])
            + 0.25 * p[4] * (-4.5 * p[0] + 13.5 * p[1] - 13.5 * p[2] + 4.5 * p[3])
            + 0.333333333333333
            * p[4]
            * (9.0 * p[0] - 22.5 * p[1] + 18.0 * p[2] - 4.5 * p[3])
            + psi_0
            - psi_f
        )
        ** 2
    )


if __name__ == "__main__":
    x_0 = 4.53
    y_0 = -17.54
    psi_0 = 0.45
    x_f = -3.45
    y_f = 534.54
    psi_f = 2.55
    alpha = 0.1
    beta = 0.2
    gamma = 0.3
    k_0 = 0.5
    k_f = 0.6
    k_max = 1

    x_init = (-0.75, 0.12, 34)
    p = (k_0, x_init[0], x_init[1], k_f, x_init[2])

    cost_value = compute_cost_function(
        p, alpha, beta, gamma, x_0, y_0, psi_0, x_f, y_f, psi_f
    )
    jac = compute_cf_gradient(p, alpha, beta, gamma, x_0, y_0, psi_0, x_f, y_f, psi_f)
    a, b, c, d, s_f = abcds_f(p)
    k = K(a, b, c, d, s_f)
    psi = Psi(a, b, c, d, s_f, psi_0)

    print(cost_value)
    print(jac)
    print(scipy.__version__)